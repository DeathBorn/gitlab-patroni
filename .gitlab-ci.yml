image: docker:19.03.15

variables:
  DEBIAN_FRONTEND: noninteractive
  BUNDLE_PATH: "./.bundle"
#  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:19.03.15-dind

stages:
  - test
  - publish

before_script:
  - eval $(ssh-agent -s)
  - echo "${CI_PRIVATE_KEY}" | base64 -d | ssh-add -
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - apk update && apk add git openssh-client rsync make jq ruby-full ruby-dev build-base libressl-dev libsodium
  - gem install bundle
  - make gems

# Prefer GitLab CI parallelism to Make parallelism (split the lint step)
cookstyle:
  stage: test
  cache:
    paths:
      - $BUNDLE_PATH
  script:
    - make cookstyle

rspec-test-job:
  stage: test
  coverage: "/^\\s*Touch\\sCoverage:\\s*(\\d+\\.\\d+)%/"
  cache:
    paths:
      - "$BUNDLE_PATH"
  script:
    - make rspec

kitchen-test-job:
  stage: test
  cache:
    paths:
      - "$BUNDLE_PATH"
  script:
    - make kitchen

push-cookbook:
  stage: publish
  only:
    refs:
      - master
    variables:
      - "$OPS_CLONE_USERNAME"
      - "$OPS_CLONE_PASSWORD"
  script:
    - git clone https://$OPS_CLONE_USERNAME:$OPS_CLONE_PASSWORD@ops.gitlab.net/gitlab-cookbooks/cookbook-publisher.git /tmp/cookbook-publisher
    - cp /tmp/cookbook-publisher/publisher.rb .
    - ruby publisher.rb
