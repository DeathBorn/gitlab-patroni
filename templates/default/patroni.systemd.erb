[Unit]
Description=Runners to orchestrate a high-availability PostgreSQL
After=syslog.target network.target

[Service]
Type=simple

User=<%= patroni_conf['gitlab-patroni']['user'] %>
Group=<%= patroni_conf['gitlab-patroni']['group'] %>

StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=patroni

WorkingDirectory=~

# Start the patroni process
ExecStart=<%= patroni_conf['gitlab-patroni']['patroni']['install_directory'] %>/bin/patroni <%= patroni_conf['gitlab-patroni']['patroni']['config_directory'] %>/patroni.yml

# Send HUP to reload from patroni.yml
ExecReload=/bin/kill -s HUP $MAINPID

# only kill the patroni process, not it's children, so it will gracefully stop postgres
KillMode=process

# Give a reasonable amount of time for the server to start up/shut down
TimeoutSec=30

# Do not restart the service if it crashes, we want to manually inspect database on failure
Restart=no

[Install]
WantedBy=multi-user.target
